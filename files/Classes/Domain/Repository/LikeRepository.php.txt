<?php
namespace ONEANDONE\OneandoneBoard\Domain\Repository;

    /***************************************************************
     *
     *  Copyright notice
     *
     *  (c) 2016
     *
     *  All rights reserved
     *
     *  This script is part of the TYPO3 project. The TYPO3 project is
     *  free software; you can redistribute it and/or modify
     *  it under the terms of the GNU General Public License as published by
     *  the Free Software Foundation; either version 3 of the License, or
     *  (at your option) any later version.
     *
     *  The GNU General Public License can be found at
     *  http://www.gnu.org/copyleft/gpl.html.
     *
     *  This script is distributed in the hope that it will be useful,
     *  but WITHOUT ANY WARRANTY; without even the implied warranty of
     *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     *  GNU General Public License for more details.
     *
     *  This copyright notice MUST APPEAR in all copies of the script!
     ***************************************************************/

/**
 * The repository for Likes
 */
class LikeRepository extends \TYPO3\CMS\Extbase\Persistence\Repository
{

    /**
     * userRepository
     *
     * @var \ONEANDONE\Community\Domain\Repository\UserRepository
     * @inject
     */
    protected $userRepository = NULL;

    public function findByUserIddAndPostId($userid, $postid) {

    }

    public function hasLiked($userid, $postid)
    {
        $query = $this->createQuery();
        $query->matching(
            $query->logicalAnd(
                $query->equals('author', $userid),
                $query->equals('postid', $postid)
            )
        );
        return $query->execute();
    }

    public function getByPostId($postid)
    {

        $query = $this->createQuery();
        $query->matching($query->in('postid', array($postid)));

        $likes = [];
        $tmpLikes = $query->execute();

        /**
         * @var $like \ONEANDONE\OneandoneBoard\Domain\Model\Like
         */
        foreach ($tmpLikes as $like) {
            if (is_int($like->getAuthor())) {
                $like->setAuthor($this->userRepository->findByUid($like->getAuthor()));
            }
            $likes[] = $like;
        }

        return $likes;


    }

}
