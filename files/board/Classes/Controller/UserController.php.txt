<?php
namespace ONEANDONE\Board\Controller;


/***************************************************************
 *
 *  Copyright notice
 *
 *  (c) 2016
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/
use ONEANDONE\Board\Utility\Breadcrumb;

/**
 * UserController
 */
class UserController extends \TYPO3\CMS\Extbase\Mvc\Controller\ActionController
{

    /**
     * userRepository
     *
     * @var \ONEANDONE\Board\Domain\Repository\UserRepository
     * @inject
     */
    protected $userRepository = NULL;

    /**
     * user
     *
     * @var \ONEANDONE\Board\Utility\User
     * @inject
     */
    protected $user = NULL;

    /**
     * breadcrumb
     *
     * @var \ONEANDONE\Board\Utility\Breadcrumb
     * @inject
     */
    protected $breadcrumb = NULL;

    public function initializeView()
    {

        $root = 'Community';

        if ($this->user->loggedIn()) {
            $root = $this->user->getData()->getUsername();
        }

        $this->breadcrumb->addElement($root);

        $this->view->assign('breadcrumb', $this->breadcrumb);

    }

    /**
     * action list
     *
     * @return void
     */
    public function listAction()
    {
        $users = $this->userRepository->findAll();
        $this->view->assign('users', $users);
    }

    /**
     * action profile
     *
     * @param \ONEANDONE\Board\Domain\Model\User $user
     * @ignorevalidation $user
     * @return void
     */
    public function profileAction(\ONEANDONE\Board\Domain\Model\User $user)
    {

        if (!$this->user->loggedIn()) {
            $this->redirect('login');
        }

        $this->view->assign('user', $user);

    }

    /**
     * action register
     *
     * @return void
     */
    public function registerAction()
    {

        $this->breadcrumb->addElement('Register', Breadcrumb::ACTIVE);

    }

    /**
     * action logout
     *
     * @return void
     */
    public function logoutAction()
    {
        $this->user->logout();
        $this->redirect('list', 'Board');
    }

    /**
     * action login
     */
    public function loginAction()
    {

        if ($this->user->loggedIn()) {
            return $this->redirect('profile', 'User');
        }

        $this->breadcrumb->addElement('Login', Breadcrumb::ACTIVE);

        if ($this->request->hasArgument('data')) {

            $data = $this->request->getArgument('data');

            $this->view->assign('data', $data);

            $user = $this->userRepository->findByDefinedIdentifier($data['username'], ['email', 'username']);

            if (!is_null($user)) {

                if (md5($data['password']) == $user->getPassword()) {
                    $this->addFlashMessage('Welcome back, ' . $user->getUsername());
                    $this->user->login($user);
                    return $this->redirect('list', 'Board');
                }

                return $this->addFlashMessage('Wrong password');

            }

            $this->addFlashMessage('Unknown user');

        }

    }

    /**
     * action create
     *
     * @param \ONEANDONE\Board\Domain\Model\User $newUser
     * @return void
     */
    public function createAction(\ONEANDONE\Board\Domain\Model\User $newUser)
    {
        $this->addFlashMessage('Thanks!', '', \TYPO3\CMS\Core\Messaging\AbstractMessage::ERROR);
        $this->userRepository->add($newUser);
        $this->redirect('list', 'Board');
    }

    /**
     * action edit
     *
     * @param \ONEANDONE\Board\Domain\Model\User $user
     * @return void
     */
    public function settingsAction(\ONEANDONE\Board\Domain\Model\User $user)
    {
        $this->breadcrumb->addElement('Settings', Breadcrumb::ACTIVE);
        $this->view->assign('user', $user);
    }

    /**
     * action update
     *
     * @param \ONEANDONE\Board\Domain\Model\User $user
     * @return void
     */
    public function updateAction(\ONEANDONE\Board\Domain\Model\User $user)
    {

        $this->userRepository->update($user);

        $this->redirect('settings', 'User', 'Board', [
            'user' => $user
        ]);

    }

    /**
     * action delete
     *
     * @param \ONEANDONE\Board\Domain\Model\User $user
     * @return void
     */
    public function deleteAction(\ONEANDONE\Board\Domain\Model\User $user)
    {
        $this->addFlashMessage('The object was deleted. Please be aware that this action is publicly accessible unless you implement an access check. See http://wiki.typo3.org/T3Doc/Extension_Builder/Using_the_Extension_Builder#1._Model_the_domain', '', \TYPO3\CMS\Core\Messaging\AbstractMessage::ERROR);
        $this->userRepository->remove($user);
        $this->redirect('list');
    }

}
