<?php
namespace ONEANDONE\Board\Utility;


/***************************************************************
 *
 *  Copyright notice
 *
 *  (c) 2016
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/
use TYPO3\CMS\Core\Messaging\AbstractMessage;

/**
 * User
 */
class User
{

    /**
     * data
     *
     * @var \ONEANDONE\Board\Domain\Model\User
     */
    protected $data = NULL;

    /**
     * User constructor
     */
    public function __construct()
    {

        /* Create temp user */
        $this->data = new \ONEANDONE\Board\Domain\Model\User();

        if ($this->loggedIn()) {

            $objectManager = \TYPO3\CMS\Core\Utility\GeneralUtility::makeInstance('TYPO3\\CMS\\Extbase\\Object\\ObjectManager');
            $repository = $objectManager->get('ONEANDONE\\Board\\Domain\\Repository\\UserRepository');

            $this->data = $repository->findByUid($this->getCookie());

        }

    }

    public function getCookie()
    {
        if (!isset($_COOKIE['UserID'])) {
            setcookie('UserID', 0, 0);
        }
        return $_COOKIE['UserID'];
    }

    public function login(\ONEANDONE\Board\Domain\Model\User $user)
    {
        setcookie('UserID', $user->getUid(), time() + 3600);
        $this->data = $user;
    }

    public function loggedIn()
    {
        if ($this->getCookie() != '0') {
            return true;
        }
        return false;
    }

    public function getData()
    {
        return $this->data;
    }

    public function redirect($e)
    {

        $e->addFlashMessage(
            'You must be logged in for this action.',
            NULL,
            AbstractMessage::INFO
        );

    }

    public function logout()
    {
        setcookie('UserID', 0, 0);
    }

}

