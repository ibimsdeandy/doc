<?php
namespace ONEANDONE\OneandoneBoard\Controller;

use TYPO3\CMS\Core\Utility\GeneralUtility;

/***************************************************************
 *
 *  Copyright notice
 *
 *  (c) 2016
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

/**
 * BoardController
 */
class BoardController extends \TYPO3\CMS\Extbase\Mvc\Controller\ActionController
{

    /**
     * boardRepository
     *
     * @var \ONEANDONE\OneandoneBoard\Domain\Repository\BoardRepository
     * @inject
     */
    protected $boardRepository = NULL;

    /**
     * topicRepository
     *
     * @var \ONEANDONE\OneandoneBoard\Domain\Repository\TopicRepository
     * @inject
     */
    protected $topicRepository = NULL;

    /**
     * postRepository
     *
     * @var \ONEANDONE\OneandoneBoard\Domain\Repository\PostRepository
     * @inject
     */
    protected $postRepository = NULL;

    /**
     * userRepository
     *
     * @var \TYPO3\CMS\Extbase\Domain\Repository\FrontendUserRepository
     * @inject
     */
    protected $userRepository = NULL;

    /**
     * categoryRepository
     *
     * @var \ONEANDONE\OneandoneBoard\Domain\Repository\CategoryRepository
     * @inject
     */
    protected $categoryRepository = NULL;

    /**
     * general
     *
     * @var \ONEANDONE\OneandoneBoard\Utility\Helper
     * @inject
     */
    protected $general = NULL;

    /**
     * action list
     *
     * @return void
     */
    public function listAction()
    {

        $boards = $this->boardRepository->getByParentId($this->getDataFolderId());
        $related = $this->topicRepository->getRelated();
        $posts = $this->postRepository->findAll();
        $this->view->assignMultiple([
            'boards' => $boards,
            'related' => $related,
            'posts' => $posts
        ]);
    }

    /**
     * action show
     *
     * @param \ONEANDONE\OneandoneBoard\Domain\Model\Board $board
     * @return void
     */
    public function showAction(\ONEANDONE\OneandoneBoard\Domain\Model\Board $board)
    {

        $GLOBALS['TSFE']->page['title'] = $board->getTitle();

        $category = $this->categoryRepository->findAll()[0]->getUid();

        if ($this->request->hasArgument('category')) {
            $category = $this->request->getArgument('category');
        }

        $categories = $this->categoryRepository->findAll($board->getUid());
        $boards = $this->boardRepository->getByParentId($board->getUid(), 'parentid');
        $topics = $this->topicRepository->getByBoardId($board->getUid(), $category);

        $this->view->assignMultiple([
            'related' => $this->topicRepository->getRelated(),
            'currentCategory' => $this->categoryRepository->findByUid($category),
            'categories' => $categories,
            'topics' => $topics,
            'board' => $board,
            'boards' => $boards
        ]);

    }

    private function getDataFolderId()
    {
        $c = $this->configurationManager->getContentObject();
        return $c->data['pages'];
    }

}
