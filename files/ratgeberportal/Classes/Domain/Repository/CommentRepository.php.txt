<?php
namespace Igroup\Ratgeberportal\Domain\Repository;

/***************************************************************
 *
 *  Copyright notice
 *
 *  (c) 2016 Andreas Kraemer <a.kraemer@i-group.de>, igroup Internetagentur
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/


/**
 * The repository for Comments
 */
class CommentRepository extends \TYPO3\CMS\Extbase\Persistence\Repository {
	
	protected $defaultOrderings = array('crdate' => \TYPO3\CMS\Extbase\Persistence\QueryInterface::ORDER_ASCENDING);
	
	/**
	 * findByPid
	 *
	 * @param integer $pid
	 * @return Tx_Extbase_Persistence_QueryResult
	 */
	
	public function findByPid($pid){
		$query = $this->createQuery();
		$query->getQuerySettings()->setRespectStoragePage(FALSE);
		$query->matching( $query->equals("pid", $pid) );
		$query->matching( $query->equals('sysLanguageUid', $GLOBALS['TSFE']->sys_language_uid));
		$comments = $query->execute();
		foreach($comments as $comment) {
			$comment->setIsLikedByUser(\Igroup\Ratgeberportal\Utility\Helper::recordIsLikedByCurrentUser($comment, FALSE));
		}
		return $comments;
	}
	
	/**
	 * Likes or un-likes the current record
	 * @param \Igroup\Ratgeberportal\Domain\Model\Comment $comment
	 */
	public function updateLike($comment) {
		$like = \Igroup\Ratgeberportal\Utility\Helper::recordIsLikedByCurrentUser($comment);
		if($like !== FALSE) {
			// remove like
			$comment->removeLike($like);
			$this->update($comment);
			return false;
		}
		// create new like
		$newLike = $this->objectManager->get(\Igroup\Ratgeberportal\Domain\Model\Like::class);
		$newLike->setUserId(\Igroup\Ratgeberportal\Utility\Helper::getUserId());
		$comment->addLike($newLike);
		$this->update($comment);
		return true;
	}
}
